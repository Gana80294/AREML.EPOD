// <auto-generated />
using System;
using AREML.EPOD.Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AREML.EPOD.Core.Migrations
{
    [DbContext(typeof(AuthContext))]
    [Migration("20240812110507_updateClientDataType")]
    partial class updateClientDataType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Client.ClientDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AllowedOrigin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ApplicationType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ForwardLogistics.P_INV_ATTACHMENT", b =>
                {
                    b.Property<int>("ATTACHMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ATTACHMENT_ID"));

                    b.Property<byte[]>("ATTACHMENT_FILE")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ATTACHMENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CREATED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATED_ON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DOCUMENT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FILE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FILE_PATH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HEADER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.HasKey("ATTACHMENT_ID");

                    b.ToTable("P_INV_ATTACHMENT");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ForwardLogistics.P_INV_HEADER_DETAIL", b =>
                {
                    b.Property<int>("HEADER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HEADER_ID"));

                    b.Property<DateTime?>("ACTUAL_DELIVERY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ACTUAL_DISPATCH_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CANC_INV_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CARRIER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CREATED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATED_ON")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUSTOMER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CUSTOMER_DESTINATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_GROUP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_GROUP_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DELIVERY_DATE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DELIVERY_TIME")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DISTANCE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIVISION")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DRIVER_CONTACT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EWAYBILL_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("EWAYBILL_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FREIGHT_ORDER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FREIGHT_ORDER_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("FWD_AGENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GROSS_WEIGHT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("INV_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("INV_NO")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("INV_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISXMLCREATED")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LR_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("LR_NO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ODIN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ORGANIZATION")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OUTBOUND_DELIVERY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OUTBOUND_DELIVERY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("PLANT")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PLANT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLANT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("POD_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PROPOSED_DELIVERY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("SECTOR_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("STATUS_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TOTAL_DISTANCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TOTAL_TRAVEL_TIME")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TRACKING_LINK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TRANSIT_LEAD_TIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VEHICLE_CAPACITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VEHICLE_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VEHICLE_REPORTED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("XMLMOVED_ON")
                        .HasColumnType("datetime2");

                    b.HasKey("HEADER_ID");

                    b.HasIndex("ORGANIZATION", "DIVISION", "PLANT", "INV_NO", "ODIN", "INV_DATE", "CUSTOMER", "CUSTOMER_NAME", "LR_NO", "STATUS");

                    b.ToTable("P_INV_HEADER_DETAILS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ForwardLogistics.P_INV_ITEM_DETAIL", b =>
                {
                    b.Property<int>("ITEM_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ITEM_ID"));

                    b.Property<string>("CREATED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATED_ON")
                        .HasColumnType("datetime2");

                    b.Property<int>("HEADER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("ITEM_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM_WEIGHT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MATERIAL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MATERIAL_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("QUANTITY_UOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REASON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RECEIVED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("REMARKS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ITEM_ID");

                    b.HasIndex("HEADER_ID");

                    b.ToTable("P_INV_ITEM_DETAIL");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Logs.SalesReturnCreditNoteLog", b =>
                {
                    b.Property<int>("CRID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CRID"));

                    b.Property<string>("CreditInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.HasKey("CRID");

                    b.ToTable("SalesReturnCreditNoteLogs");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Logs.TokenHistory", b =>
                {
                    b.Property<int>("TokenHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenHistoryID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UsedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenHistoryID");

                    b.ToTable("TokenHistories");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Logs.UserActionHistory", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangesDetected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.ToTable("UserActionHistories");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Logs.UserCreationErrorLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogReson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.ToTable("UserCreationErrorLogs");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Logs.UserLoginHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserLoginHistories");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.CFAUserMapping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid>("CFAUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("CFAUserMappings");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.PlantGroupPlantMap", b =>
                {
                    b.Property<int>("PlantGroupId")
                        .HasColumnType("int");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlantGroupId", "PlantCode");

                    b.ToTable("PlantGroupPlantMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.PlantOrganizationMap", b =>
                {
                    b.Property<string>("OrganizationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("OrganizationCode", "PlantCode");

                    b.ToTable("PlantOrganizationMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.RoleAppMap", b =>
                {
                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleID", "AppID");

                    b.ToTable("RoleAppMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.SLSGroupWithCustomerGroupMap", b =>
                {
                    b.Property<int>("SGID")
                        .HasColumnType("int");

                    b.Property<int>("CGID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SLSGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SGID", "CGID");

                    b.ToTable("SLSGroupWithCustomerGroupMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.UserOrganizationMap", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrganizationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "OrganizationCode");

                    b.ToTable("UserOrganizationMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.UserPlantMap", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "PlantCode");

                    b.ToTable("UserPlantMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.UserRoleMap", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "RoleID");

                    b.ToTable("UserRoleMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Mappings.UserSalesGroupMap", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SGID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "SGID");

                    b.ToTable("UserSalesGroupMaps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.Admin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.App", b =>
                {
                    b.Property<int>("AppID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppID"));

                    b.Property<string>("AppName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AppID");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.CustomerGroup", b =>
                {
                    b.Property<int>("CGID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CGID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CGID");

                    b.ToTable("CustomerGroups");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.DocumentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentHistories");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.MobileVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("VersionCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobileVersions");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.Organization", b =>
                {
                    b.Property<string>("OrganizationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("OrganizationCode");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.Plant", b =>
                {
                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PlantCode");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.PlantGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlantGroups");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.Reason", b =>
                {
                    b.Property<int>("ReasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ReasonID");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.SMSOTPChangePasswordHistory", b =>
                {
                    b.Property<string>("OTPID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsOTPUSed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OTPCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OTPExpiredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OTPUsedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OTPID");

                    b.ToTable("SMSOTPChnagePasswordHistories");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.ScrollNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScrollNotifications");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourthLastPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCFAMapped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondLastPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdLastPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WrongAttempt")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.UserManualDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserManualDocs");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.UserManualDocStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserManualDocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserManualDocId");

                    b.ToTable("UserManualDocStores");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_HEADER", b =>
                {
                    b.Property<int>("RPOD_HEADER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RPOD_HEADER_ID"));

                    b.Property<double?>("BALANCE_QUANTITY")
                        .HasColumnType("float");

                    b.Property<double?>("BILLED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("CLAIM_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DC_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DC_NUMBER")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PENDING_DAYS")
                        .HasColumnType("int");

                    b.Property<string>("PLANT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLANT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SLA_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("STATUS")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("TOTAL_QUANTITY")
                        .HasColumnType("float");

                    b.HasKey("RPOD_HEADER_ID");

                    b.ToTable("RPOD_HEADER_DETAILS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_LR_ATTACHMENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RPOD_HEADER_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RPOD_LR_ATTACHMENTS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_LR_DETAIL", b =>
                {
                    b.Property<int>("LR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LR_ID"));

                    b.Property<int>("CUSTOMER_DOC_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DC_ACKNOWLEDGEMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("DC_DOC_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DC_RECEIEVED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LR_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("LR_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RPOD_HEADER_ID")
                        .HasColumnType("int");

                    b.HasKey("LR_ID");

                    b.ToTable("RPOD_LR_DETAILS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_MATERIAL", b =>
                {
                    b.Property<int>("MATERIAL_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MATERIAL_ID"));

                    b.Property<double?>("HAND_OVERED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("MATERIAL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("QUANTITY")
                        .HasColumnType("float");

                    b.Property<double?>("RECEIVED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("REMARKS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RPOD_HEADER_ID")
                        .HasColumnType("int");

                    b.Property<string>("STATUS")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MATERIAL_ID");

                    b.HasIndex("RPOD_HEADER_ID");

                    b.ToTable("RPOD_MATERIAL_DETAILS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.ReversePodApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApprover")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ReversePodApprovers");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.WARRANTY_REPLACEMENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("BALANCE_QUANTITY")
                        .HasColumnType("float");

                    b.Property<double?>("BILLED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<string>("INV_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MATERIAL_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RPOD_HEADER_ID")
                        .HasColumnType("int");

                    b.Property<double?>("SUPPLIED_QUANTITY")
                        .HasColumnType("float");

                    b.Property<double?>("TOTAL_QUANTITY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RPOD_HEADER_ID");

                    b.ToTable("WARRANTY_REPLACEMENT_DETAILS");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.Master.UserManualDocStore", b =>
                {
                    b.HasOne("AREML.EPOD.Core.Entities.Master.UserManualDoc", "UserManualDocs")
                        .WithMany()
                        .HasForeignKey("UserManualDocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserManualDocs");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_MATERIAL", b =>
                {
                    b.HasOne("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_HEADER", "REVERSE_POD")
                        .WithMany()
                        .HasForeignKey("RPOD_HEADER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("REVERSE_POD");
                });

            modelBuilder.Entity("AREML.EPOD.Core.Entities.ReverseLogistics.WARRANTY_REPLACEMENT", b =>
                {
                    b.HasOne("AREML.EPOD.Core.Entities.ReverseLogistics.RPOD_HEADER", "REVERSE_POD")
                        .WithMany()
                        .HasForeignKey("RPOD_HEADER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("REVERSE_POD");
                });
#pragma warning restore 612, 618
        }
    }
}
